name: SEO Testing Infrastructure

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  seo-lighthouse-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Start application
      run: npm start &
      env:
        NODE_ENV: production
    
    - name: Wait for application to be ready
      run: npx wait-on http://localhost:3000 --timeout 60000
    
    - name: Run Lighthouse CI
      run: npx lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
    
    - name: Upload Lighthouse results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-results-${{ matrix.node-version }}
        path: .lighthouseci/

  cross-browser-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Build application
      run: npm run build
    
    - name: Run cross-browser tests
      run: npx playwright test src/test/e2e/cross-browser-seo.spec.ts
    
    - name: Upload Playwright results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-results
        path: test-results/

  performance-regression-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Start application
      run: npm start &
      env:
        NODE_ENV: production
    
    - name: Wait for application to be ready
      run: npx wait-on http://localhost:3000 --timeout 60000
    
    - name: Run performance regression tests
      run: npx vitest run src/test/performance/regression.test.ts
    
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-results
        path: test-results/

  content-optimization-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run content optimization tests
      run: npx vitest run src/test/seo/content-optimization.test.ts
    
    - name: Upload content optimization results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: content-optimization-results
        path: test-results/

  comprehensive-seo-report:
    runs-on: ubuntu-latest
    needs: [seo-lighthouse-tests, cross-browser-tests, performance-regression-tests, content-optimization-tests]
    if: always()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/
    
    - name: Generate comprehensive report
      run: |
        mkdir -p test-results
        echo "# SEO Testing Infrastructure Report" > test-results/comprehensive-report.md
        echo "Generated on: $(date)" >> test-results/comprehensive-report.md
        echo "" >> test-results/comprehensive-report.md
        
        echo "## Test Results Summary" >> test-results/comprehensive-report.md
        echo "- Lighthouse Tests: ${{ needs.seo-lighthouse-tests.result }}" >> test-results/comprehensive-report.md
        echo "- Cross-Browser Tests: ${{ needs.cross-browser-tests.result }}" >> test-results/comprehensive-report.md
        echo "- Performance Tests: ${{ needs.performance-regression-tests.result }}" >> test-results/comprehensive-report.md
        echo "- Content Optimization Tests: ${{ needs.content-optimization-tests.result }}" >> test-results/comprehensive-report.md
        echo "" >> test-results/comprehensive-report.md
        
        echo "## Artifacts" >> test-results/comprehensive-report.md
        find artifacts/ -name "*.json" -o -name "*.html" -o -name "*.xml" | head -20 >> test-results/comprehensive-report.md
    
    - name: Upload comprehensive report
      uses: actions/upload-artifact@v4
      with:
        name: comprehensive-seo-report
        path: test-results/comprehensive-report.md
    
    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('test-results/comprehensive-report.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## 🔍 SEO Testing Infrastructure Results\n\n${report}`
          });

  notify-on-failure:
    runs-on: ubuntu-latest
    needs: [seo-lighthouse-tests, cross-browser-tests, performance-regression-tests, content-optimization-tests]
    if: failure()
    
    steps:
    - name: Notify on failure
      run: |
        echo "🚨 SEO testing infrastructure has failures!"
        echo "Please check the failed jobs and fix the issues."
        exit 1